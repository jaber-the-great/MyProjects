#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DbFinal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_FINAL")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaddress(address instance);
    partial void Updateaddress(address instance);
    partial void Deleteaddress(address instance);
    partial void Insertbranch(branch instance);
    partial void Updatebranch(branch instance);
    partial void Deletebranch(branch instance);
    partial void Insertdoctor(doctor instance);
    partial void Updatedoctor(doctor instance);
    partial void Deletedoctor(doctor instance);
    partial void Insertdoctor_workat(doctor_workat instance);
    partial void Updatedoctor_workat(doctor_workat instance);
    partial void Deletedoctor_workat(doctor_workat instance);
    partial void Insertinsured(insured instance);
    partial void Updateinsured(insured instance);
    partial void Deleteinsured(insured instance);
    partial void Insertmedical_station(medical_station instance);
    partial void Updatemedical_station(medical_station instance);
    partial void Deletemedical_station(medical_station instance);
    partial void Insertstaff(staff instance);
    partial void Updatestaff(staff instance);
    partial void Deletestaff(staff instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DbFinal.Properties.Settings.Default.DB_FINALConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<address> addresses
		{
			get
			{
				return this.GetTable<address>();
			}
		}
		
		public System.Data.Linq.Table<branch> branches
		{
			get
			{
				return this.GetTable<branch>();
			}
		}
		
		public System.Data.Linq.Table<doctor> doctors
		{
			get
			{
				return this.GetTable<doctor>();
			}
		}
		
		public System.Data.Linq.Table<doctor_workat> doctor_workats
		{
			get
			{
				return this.GetTable<doctor_workat>();
			}
		}
		
		public System.Data.Linq.Table<insured> insureds
		{
			get
			{
				return this.GetTable<insured>();
			}
		}
		
		public System.Data.Linq.Table<medical_station> medical_stations
		{
			get
			{
				return this.GetTable<medical_station>();
			}
		}
		
		public System.Data.Linq.Table<staff> staffs
		{
			get
			{
				return this.GetTable<staff>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.address")]
	public partial class address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private decimal _postal_code;
		
		private string _province;
		
		private string _city;
		
		private string _pelak;
		
		private string _street;
		
		private string _alley;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void Onpostal_codeChanging(decimal value);
    partial void Onpostal_codeChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpelakChanging(string value);
    partial void OnpelakChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void OnalleyChanging(string value);
    partial void OnalleyChanged();
    #endregion
		
		public address()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal_code", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pelak", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string pelak
		{
			get
			{
				return this._pelak;
			}
			set
			{
				if ((this._pelak != value))
				{
					this.OnpelakChanging(value);
					this.SendPropertyChanging();
					this._pelak = value;
					this.SendPropertyChanged("pelak");
					this.OnpelakChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alley", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string alley
		{
			get
			{
				return this._alley;
			}
			set
			{
				if ((this._alley != value))
				{
					this.OnalleyChanging(value);
					this.SendPropertyChanging();
					this._alley = value;
					this.SendPropertyChanged("alley");
					this.OnalleyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_address", Storage="_user", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.addresses.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.addresses.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.branch")]
	public partial class branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _branch_code;
		
		private decimal _postal_code;
		
		private string _province;
		
		private string _city;
		
		private string _pelak;
		
		private string _street;
		
		private string _alley;
		
		private System.Nullable<decimal> _phone;
		
		private EntitySet<insured> _insureds;
		
		private EntitySet<staff> _staffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbranch_codeChanging(string value);
    partial void Onbranch_codeChanged();
    partial void Onpostal_codeChanging(decimal value);
    partial void Onpostal_codeChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpelakChanging(string value);
    partial void OnpelakChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void OnalleyChanging(string value);
    partial void OnalleyChanged();
    partial void OnphoneChanging(System.Nullable<decimal> value);
    partial void OnphoneChanged();
    #endregion
		
		public branch()
		{
			this._insureds = new EntitySet<insured>(new Action<insured>(this.attach_insureds), new Action<insured>(this.detach_insureds));
			this._staffs = new EntitySet<staff>(new Action<staff>(this.attach_staffs), new Action<staff>(this.detach_staffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch_code", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string branch_code
		{
			get
			{
				return this._branch_code;
			}
			set
			{
				if ((this._branch_code != value))
				{
					this.Onbranch_codeChanging(value);
					this.SendPropertyChanging();
					this._branch_code = value;
					this.SendPropertyChanged("branch_code");
					this.Onbranch_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal_code", DbType="Decimal(10,0) NOT NULL")]
		public decimal postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pelak", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string pelak
		{
			get
			{
				return this._pelak;
			}
			set
			{
				if ((this._pelak != value))
				{
					this.OnpelakChanging(value);
					this.SendPropertyChanging();
					this._pelak = value;
					this.SendPropertyChanged("pelak");
					this.OnpelakChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alley", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string alley
		{
			get
			{
				return this._alley;
			}
			set
			{
				if ((this._alley != value))
				{
					this.OnalleyChanging(value);
					this.SendPropertyChanging();
					this._alley = value;
					this.SendPropertyChanged("alley");
					this.OnalleyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="branch_insured", Storage="_insureds", ThisKey="branch_code", OtherKey="branch_code")]
		public EntitySet<insured> insureds
		{
			get
			{
				return this._insureds;
			}
			set
			{
				this._insureds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="branch_staff", Storage="_staffs", ThisKey="branch_code", OtherKey="branch_code")]
		public EntitySet<staff> staffs
		{
			get
			{
				return this._staffs;
			}
			set
			{
				this._staffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_insureds(insured entity)
		{
			this.SendPropertyChanging();
			entity.branch = this;
		}
		
		private void detach_insureds(insured entity)
		{
			this.SendPropertyChanging();
			entity.branch = null;
		}
		
		private void attach_staffs(staff entity)
		{
			this.SendPropertyChanging();
			entity.branch = this;
		}
		
		private void detach_staffs(staff entity)
		{
			this.SendPropertyChanging();
			entity.branch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctor")]
	public partial class doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _pass;
		
		private string _Mediacal_code;
		
		private string _speciality;
		
		private decimal _contract_rate;
		
		private System.Nullable<decimal> _salary;
		
		private EntitySet<doctor_workat> _doctor_workats;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnMediacal_codeChanging(string value);
    partial void OnMediacal_codeChanged();
    partial void OnspecialityChanging(string value);
    partial void OnspecialityChanged();
    partial void Oncontract_rateChanging(decimal value);
    partial void Oncontract_rateChanged();
    partial void OnsalaryChanging(System.Nullable<decimal> value);
    partial void OnsalaryChanged();
    #endregion
		
		public doctor()
		{
			this._doctor_workats = new EntitySet<doctor_workat>(new Action<doctor_workat>(this.attach_doctor_workats), new Action<doctor_workat>(this.detach_doctor_workats));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(20)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mediacal_code", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Mediacal_code
		{
			get
			{
				return this._Mediacal_code;
			}
			set
			{
				if ((this._Mediacal_code != value))
				{
					this.OnMediacal_codeChanging(value);
					this.SendPropertyChanging();
					this._Mediacal_code = value;
					this.SendPropertyChanged("Mediacal_code");
					this.OnMediacal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speciality", DbType="VarChar(30)")]
		public string speciality
		{
			get
			{
				return this._speciality;
			}
			set
			{
				if ((this._speciality != value))
				{
					this.OnspecialityChanging(value);
					this.SendPropertyChanging();
					this._speciality = value;
					this.SendPropertyChanged("speciality");
					this.OnspecialityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contract_rate", DbType="Decimal(4,2) NOT NULL")]
		public decimal contract_rate
		{
			get
			{
				return this._contract_rate;
			}
			set
			{
				if ((this._contract_rate != value))
				{
					this.Oncontract_rateChanging(value);
					this.SendPropertyChanging();
					this._contract_rate = value;
					this.SendPropertyChanged("contract_rate");
					this.Oncontract_rateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_doctor_workat", Storage="_doctor_workats", ThisKey="Mediacal_code", OtherKey="Medical_code")]
		public EntitySet<doctor_workat> doctor_workats
		{
			get
			{
				return this._doctor_workats;
			}
			set
			{
				this._doctor_workats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_doctor", Storage="_user", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.doctors.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.doctors.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_doctor_workats(doctor_workat entity)
		{
			this.SendPropertyChanging();
			entity.doctor = this;
		}
		
		private void detach_doctor_workats(doctor_workat entity)
		{
			this.SendPropertyChanging();
			entity.doctor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctor_workat")]
	public partial class doctor_workat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Medical_code;
		
		private string _medical_station_code;
		
		private System.Nullable<System.DateTime> _start_day;
		
		private EntityRef<doctor> _doctor;
		
		private EntityRef<medical_station> _medical_station;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedical_codeChanging(string value);
    partial void OnMedical_codeChanged();
    partial void Onmedical_station_codeChanging(string value);
    partial void Onmedical_station_codeChanged();
    partial void Onstart_dayChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dayChanged();
    #endregion
		
		public doctor_workat()
		{
			this._doctor = default(EntityRef<doctor>);
			this._medical_station = default(EntityRef<medical_station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medical_code", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Medical_code
		{
			get
			{
				return this._Medical_code;
			}
			set
			{
				if ((this._Medical_code != value))
				{
					if (this._doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedical_codeChanging(value);
					this.SendPropertyChanging();
					this._Medical_code = value;
					this.SendPropertyChanged("Medical_code");
					this.OnMedical_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medical_station_code", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string medical_station_code
		{
			get
			{
				return this._medical_station_code;
			}
			set
			{
				if ((this._medical_station_code != value))
				{
					if (this._medical_station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmedical_station_codeChanging(value);
					this.SendPropertyChanging();
					this._medical_station_code = value;
					this.SendPropertyChanged("medical_station_code");
					this.Onmedical_station_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_day", DbType="Date")]
		public System.Nullable<System.DateTime> start_day
		{
			get
			{
				return this._start_day;
			}
			set
			{
				if ((this._start_day != value))
				{
					this.Onstart_dayChanging(value);
					this.SendPropertyChanging();
					this._start_day = value;
					this.SendPropertyChanged("start_day");
					this.Onstart_dayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_doctor_workat", Storage="_doctor", ThisKey="Medical_code", OtherKey="Mediacal_code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public doctor doctor
		{
			get
			{
				return this._doctor.Entity;
			}
			set
			{
				doctor previousValue = this._doctor.Entity;
				if (((previousValue != value) 
							|| (this._doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor.Entity = null;
						previousValue.doctor_workats.Remove(this);
					}
					this._doctor.Entity = value;
					if ((value != null))
					{
						value.doctor_workats.Add(this);
						this._Medical_code = value.Mediacal_code;
					}
					else
					{
						this._Medical_code = default(string);
					}
					this.SendPropertyChanged("doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="medical_station_doctor_workat", Storage="_medical_station", ThisKey="medical_station_code", OtherKey="medical_station_code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public medical_station medical_station
		{
			get
			{
				return this._medical_station.Entity;
			}
			set
			{
				medical_station previousValue = this._medical_station.Entity;
				if (((previousValue != value) 
							|| (this._medical_station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._medical_station.Entity = null;
						previousValue.doctor_workats.Remove(this);
					}
					this._medical_station.Entity = value;
					if ((value != null))
					{
						value.doctor_workats.Add(this);
						this._medical_station_code = value.medical_station_code;
					}
					else
					{
						this._medical_station_code = default(string);
					}
					this.SendPropertyChanged("medical_station");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.insured")]
	public partial class insured : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _pass;
		
		private string _SSN;
		
		private System.DateTime _begin_date;
		
		private string _kind;
		
		private decimal _payment_per_period;
		
		private string _isRetired;
		
		private System.Nullable<decimal> _salary;
		
		private System.Nullable<int> _periods;
		
		private string _branch_code;
		
		private EntityRef<branch> _branch;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnSSNChanging(string value);
    partial void OnSSNChanged();
    partial void Onbegin_dateChanging(System.DateTime value);
    partial void Onbegin_dateChanged();
    partial void OnkindChanging(string value);
    partial void OnkindChanged();
    partial void Onpayment_per_periodChanging(decimal value);
    partial void Onpayment_per_periodChanged();
    partial void OnisRetiredChanging(string value);
    partial void OnisRetiredChanged();
    partial void OnsalaryChanging(System.Nullable<decimal> value);
    partial void OnsalaryChanged();
    partial void OnperiodsChanging(System.Nullable<int> value);
    partial void OnperiodsChanged();
    partial void Onbranch_codeChanging(string value);
    partial void Onbranch_codeChanged();
    #endregion
		
		public insured()
		{
			this._branch = default(EntityRef<branch>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(20)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSN", DbType="Char(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SSN
		{
			get
			{
				return this._SSN;
			}
			set
			{
				if ((this._SSN != value))
				{
					this.OnSSNChanging(value);
					this.SendPropertyChanging();
					this._SSN = value;
					this.SendPropertyChanged("SSN");
					this.OnSSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_begin_date", DbType="Date NOT NULL")]
		public System.DateTime begin_date
		{
			get
			{
				return this._begin_date;
			}
			set
			{
				if ((this._begin_date != value))
				{
					this.Onbegin_dateChanging(value);
					this.SendPropertyChanging();
					this._begin_date = value;
					this.SendPropertyChanged("begin_date");
					this.Onbegin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kind", DbType="VarChar(20)")]
		public string kind
		{
			get
			{
				return this._kind;
			}
			set
			{
				if ((this._kind != value))
				{
					this.OnkindChanging(value);
					this.SendPropertyChanging();
					this._kind = value;
					this.SendPropertyChanged("kind");
					this.OnkindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_per_period", DbType="Decimal(10,2) NOT NULL")]
		public decimal payment_per_period
		{
			get
			{
				return this._payment_per_period;
			}
			set
			{
				if ((this._payment_per_period != value))
				{
					this.Onpayment_per_periodChanging(value);
					this.SendPropertyChanging();
					this._payment_per_period = value;
					this.SendPropertyChanged("payment_per_period");
					this.Onpayment_per_periodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRetired", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string isRetired
		{
			get
			{
				return this._isRetired;
			}
			set
			{
				if ((this._isRetired != value))
				{
					this.OnisRetiredChanging(value);
					this.SendPropertyChanging();
					this._isRetired = value;
					this.SendPropertyChanged("isRetired");
					this.OnisRetiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_periods", DbType="Int")]
		public System.Nullable<int> periods
		{
			get
			{
				return this._periods;
			}
			set
			{
				if ((this._periods != value))
				{
					this.OnperiodsChanging(value);
					this.SendPropertyChanging();
					this._periods = value;
					this.SendPropertyChanged("periods");
					this.OnperiodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch_code", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string branch_code
		{
			get
			{
				return this._branch_code;
			}
			set
			{
				if ((this._branch_code != value))
				{
					if (this._branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbranch_codeChanging(value);
					this.SendPropertyChanging();
					this._branch_code = value;
					this.SendPropertyChanged("branch_code");
					this.Onbranch_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="branch_insured", Storage="_branch", ThisKey="branch_code", OtherKey="branch_code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public branch branch
		{
			get
			{
				return this._branch.Entity;
			}
			set
			{
				branch previousValue = this._branch.Entity;
				if (((previousValue != value) 
							|| (this._branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._branch.Entity = null;
						previousValue.insureds.Remove(this);
					}
					this._branch.Entity = value;
					if ((value != null))
					{
						value.insureds.Add(this);
						this._branch_code = value.branch_code;
					}
					else
					{
						this._branch_code = default(string);
					}
					this.SendPropertyChanged("branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_insured", Storage="_user", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.insureds.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.insureds.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.medical_station")]
	public partial class medical_station : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _medical_station_code;
		
		private string _name;
		
		private string _belongsTo;
		
		private decimal _postal_code;
		
		private string _province;
		
		private string _city;
		
		private string _pelak;
		
		private string _street;
		
		private string _alley;
		
		private System.Nullable<decimal> _phone;
		
		private EntitySet<doctor_workat> _doctor_workats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmedical_station_codeChanging(string value);
    partial void Onmedical_station_codeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnbelongsToChanging(string value);
    partial void OnbelongsToChanged();
    partial void Onpostal_codeChanging(decimal value);
    partial void Onpostal_codeChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnpelakChanging(string value);
    partial void OnpelakChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void OnalleyChanging(string value);
    partial void OnalleyChanged();
    partial void OnphoneChanging(System.Nullable<decimal> value);
    partial void OnphoneChanged();
    #endregion
		
		public medical_station()
		{
			this._doctor_workats = new EntitySet<doctor_workat>(new Action<doctor_workat>(this.attach_doctor_workats), new Action<doctor_workat>(this.detach_doctor_workats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medical_station_code", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string medical_station_code
		{
			get
			{
				return this._medical_station_code;
			}
			set
			{
				if ((this._medical_station_code != value))
				{
					this.Onmedical_station_codeChanging(value);
					this.SendPropertyChanging();
					this._medical_station_code = value;
					this.SendPropertyChanged("medical_station_code");
					this.Onmedical_station_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_belongsTo", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string belongsTo
		{
			get
			{
				return this._belongsTo;
			}
			set
			{
				if ((this._belongsTo != value))
				{
					this.OnbelongsToChanging(value);
					this.SendPropertyChanging();
					this._belongsTo = value;
					this.SendPropertyChanged("belongsTo");
					this.OnbelongsToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal_code", DbType="Decimal(10,0) NOT NULL")]
		public decimal postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pelak", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string pelak
		{
			get
			{
				return this._pelak;
			}
			set
			{
				if ((this._pelak != value))
				{
					this.OnpelakChanging(value);
					this.SendPropertyChanging();
					this._pelak = value;
					this.SendPropertyChanged("pelak");
					this.OnpelakChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alley", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string alley
		{
			get
			{
				return this._alley;
			}
			set
			{
				if ((this._alley != value))
				{
					this.OnalleyChanging(value);
					this.SendPropertyChanging();
					this._alley = value;
					this.SendPropertyChanged("alley");
					this.OnalleyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="medical_station_doctor_workat", Storage="_doctor_workats", ThisKey="medical_station_code", OtherKey="medical_station_code")]
		public EntitySet<doctor_workat> doctor_workats
		{
			get
			{
				return this._doctor_workats;
			}
			set
			{
				this._doctor_workats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_doctor_workats(doctor_workat entity)
		{
			this.SendPropertyChanging();
			entity.medical_station = this;
		}
		
		private void detach_doctor_workats(doctor_workat entity)
		{
			this.SendPropertyChanging();
			entity.medical_station = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staff")]
	public partial class staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _pass;
		
		private string _Staff_ID;
		
		private System.DateTime _hire_day;
		
		private System.Nullable<decimal> _salary;
		
		private string _position;
		
		private string _branch_code;
		
		private EntityRef<branch> _branch;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnStaff_IDChanging(string value);
    partial void OnStaff_IDChanged();
    partial void Onhire_dayChanging(System.DateTime value);
    partial void Onhire_dayChanged();
    partial void OnsalaryChanging(System.Nullable<decimal> value);
    partial void OnsalaryChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    partial void Onbranch_codeChanging(string value);
    partial void Onbranch_codeChanged();
    #endregion
		
		public staff()
		{
			this._branch = default(EntityRef<branch>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(20)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_ID", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Staff_ID
		{
			get
			{
				return this._Staff_ID;
			}
			set
			{
				if ((this._Staff_ID != value))
				{
					this.OnStaff_IDChanging(value);
					this.SendPropertyChanging();
					this._Staff_ID = value;
					this.SendPropertyChanged("Staff_ID");
					this.OnStaff_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hire_day", DbType="Date NOT NULL")]
		public System.DateTime hire_day
		{
			get
			{
				return this._hire_day;
			}
			set
			{
				if ((this._hire_day != value))
				{
					this.Onhire_dayChanging(value);
					this.SendPropertyChanging();
					this._hire_day = value;
					this.SendPropertyChanged("hire_day");
					this.Onhire_dayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="VarChar(20)")]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch_code", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string branch_code
		{
			get
			{
				return this._branch_code;
			}
			set
			{
				if ((this._branch_code != value))
				{
					if (this._branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbranch_codeChanging(value);
					this.SendPropertyChanging();
					this._branch_code = value;
					this.SendPropertyChanged("branch_code");
					this.Onbranch_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="branch_staff", Storage="_branch", ThisKey="branch_code", OtherKey="branch_code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public branch branch
		{
			get
			{
				return this._branch.Entity;
			}
			set
			{
				branch previousValue = this._branch.Entity;
				if (((previousValue != value) 
							|| (this._branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._branch.Entity = null;
						previousValue.staffs.Remove(this);
					}
					this._branch.Entity = value;
					if ((value != null))
					{
						value.staffs.Add(this);
						this._branch_code = value.branch_code;
					}
					else
					{
						this._branch_code = default(string);
					}
					this.SendPropertyChanged("branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_staff", Storage="_user", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.staffs.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.staffs.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _first_name;
		
		private string _last_name;
		
		private System.Nullable<System.DateTime> _birth_day;
		
		private System.Nullable<decimal> _phone;
		
		private System.Nullable<decimal> _national_code;
		
		private EntitySet<address> _addresses;
		
		private EntitySet<doctor> _doctors;
		
		private EntitySet<insured> _insureds;
		
		private EntitySet<staff> _staffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onbirth_dayChanging(System.Nullable<System.DateTime> value);
    partial void Onbirth_dayChanged();
    partial void OnphoneChanging(System.Nullable<decimal> value);
    partial void OnphoneChanged();
    partial void Onnational_codeChanging(System.Nullable<decimal> value);
    partial void Onnational_codeChanged();
    #endregion
		
		public user()
		{
			this._addresses = new EntitySet<address>(new Action<address>(this.attach_addresses), new Action<address>(this.detach_addresses));
			this._doctors = new EntitySet<doctor>(new Action<doctor>(this.attach_doctors), new Action<doctor>(this.detach_doctors));
			this._insureds = new EntitySet<insured>(new Action<insured>(this.attach_insureds), new Action<insured>(this.detach_insureds));
			this._staffs = new EntitySet<staff>(new Action<staff>(this.attach_staffs), new Action<staff>(this.detach_staffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birth_day", DbType="Date")]
		public System.Nullable<System.DateTime> birth_day
		{
			get
			{
				return this._birth_day;
			}
			set
			{
				if ((this._birth_day != value))
				{
					this.Onbirth_dayChanging(value);
					this.SendPropertyChanging();
					this._birth_day = value;
					this.SendPropertyChanged("birth_day");
					this.Onbirth_dayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_national_code", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> national_code
		{
			get
			{
				return this._national_code;
			}
			set
			{
				if ((this._national_code != value))
				{
					this.Onnational_codeChanging(value);
					this.SendPropertyChanging();
					this._national_code = value;
					this.SendPropertyChanged("national_code");
					this.Onnational_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_address", Storage="_addresses", ThisKey="ID", OtherKey="ID")]
		public EntitySet<address> addresses
		{
			get
			{
				return this._addresses;
			}
			set
			{
				this._addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_doctor", Storage="_doctors", ThisKey="ID", OtherKey="ID")]
		public EntitySet<doctor> doctors
		{
			get
			{
				return this._doctors;
			}
			set
			{
				this._doctors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_insured", Storage="_insureds", ThisKey="ID", OtherKey="ID")]
		public EntitySet<insured> insureds
		{
			get
			{
				return this._insureds;
			}
			set
			{
				this._insureds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_staff", Storage="_staffs", ThisKey="ID", OtherKey="ID")]
		public EntitySet<staff> staffs
		{
			get
			{
				return this._staffs;
			}
			set
			{
				this._staffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_addresses(address entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_addresses(address entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_doctors(doctor entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_doctors(doctor entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_insureds(insured entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_insureds(insured entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_staffs(staff entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_staffs(staff entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
}
#pragma warning restore 1591
